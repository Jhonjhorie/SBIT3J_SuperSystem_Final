
@{
    ViewBag.Title = "Login";
    Layout = "~/Views/Shared/_LoginPageLayout.cshtml";
}
<link href="~/Content/Styles/LoginPage.css" rel="stylesheet" />  @*THIS CONNECTION IS FOR STYLE*@

@model SBIT3J_SuperSystem_Final.Models.EmployeeAccount


<div class="overall-page-container">
    <div class="overlay">

        <div class="loginpage-container">

            <div class="left-panel">

                <div class="header-logo">
                    <div class="img-container">

                    </div>
                </div>
                <div class="company-name">
                    <h1>Down Town Alley</h1>
                    <p>"Elevate Your Style, Embrace Your Identity."</p>
                </div>
            </div>

            <div class="right-panel">
                <div class="welcome-header">
                    <h1>Welcome</h1>
                    <p>Log in to your account to continue</p>
                </div>
                @using (Html.BeginForm("Login", "Accounts", FormMethod.Post, new { @class = "form" }))
                {
                    <div class="input-control">
                        @Html.Label("Username")
                        @Html.TextBoxFor(model => model.Username, new { @class = "form-control", placeholder = " Enter your username" })
                        <div class="error-container"> @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })</div>
                    </div>

                    <div class="input-control">
                        @Html.Label("Password")
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", placeholder = " Enter Password ", type = "password" } })
                        <div class="error-container"> @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" }) @ViewBag.ErrorMessage </div>

                    </div>

                    <input type="submit" value="LOGIN" name="Login" class="btn btn-info" />
                }
            </div>

        </div>
    </div>
    <div id="clock">
        <h1 id="time"></h1>
    </div>
</div>

<script>
    function updateTime() {
        var currentTime = new Date();
        var hours = currentTime.getHours();
        var minutes = currentTime.getMinutes();
        var seconds = currentTime.getSeconds();

        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;

        var formattedTime = hours + ":" + minutes + ":" + seconds;
        document.getElementById("time").innerHTML = formattedTime;
    }

    // Update time every second
    setInterval(updateTime, 1000);

    // Initial update
    updateTime();
</script>
